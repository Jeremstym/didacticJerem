_target_: torch.nn.Sequential
_args_:
  - _target_: collections.OrderedDict

    downsampling_convolution:
      _target_: didactic.models.layers.TS_Patching
      in_channels: ${op.mul:${builtin.len:${task.views}},${builtin.len:${task.time_series_attrs}}}
      out_channels: ${op.mul:${builtin.len:${task.views}},${builtin.len:${task.time_series_attrs}}}
      kernel_size: 16
      stride: 8
      padding: 0

    positional_encoding:
      _target_: didactic.models.layers.PositionalEncoding
      sequence_len: ${task.time_series_tokenizer.resample_dim}
      d_model: ${op.mul:${builtin.len:${task.views}},${builtin.len:${task.time_series_attrs}}}

    transformer_encoder:
      _target_: torch.nn.TransformerEncoder
      num_layers: 1

      norm:
        _target_: torch.nn.LayerNorm
        normalized_shape: ${op.mul:${builtin.len:${task.views}},${builtin.len:${task.time_series_attrs}}}

      encoder_layer:
        _target_: torch.nn.TransformerEncoderLayer
        d_model: ${op.mul:${builtin.len:${task.views}},${builtin.len:${task.time_series_attrs}}}
        nhead: 2
        dim_feedforward: ${op.mul:${builtin.len:${task.views}},${builtin.len:${task.time_series_attrs}}}
        dropout: 0.3
        activation: relu
        batch_first: True
        norm_first: False

    # sequence_pooling:
    #   _target_: didactic.models.layers.SequencePooling
    #   d_model: ${op.mul:${builtin.len:${task.views}},${builtin.len:${task.time_series_attrs}}}
    
    linear_pooling:
      _target_: didactic.models.layers.LinearPooling
      n_tokens: ${op.mul:${builtin.len:${task.views}},${builtin.len:${task.time_series_attrs}}}
      d_token: ${task.embed_dim}
